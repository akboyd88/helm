{{- define "plex.env-vars" -}}
{{- range $key, $value := . }}
- name: {{ $key | quote }}
  value: {{ $value | quote }}
{{- end }}
{{- end }}

{{- define "plex.volume-mounts" -}}
{{- range . }}
{{ . | toYaml }}
{{- end }}
{{- end }}

{{- define "plex.time-zone" -}}
- name: TZ
  value: "{{ .Values.timezone }}"
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "plex.fullname" . }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
  - metadata:
      name: plex-media
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.mediaStorageClass }}
      storageClassName: {{ .Values.mediaStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.mediaStorageSize }}
  - metadata:
      name: plex-transcode
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.transcodeStorageClass }}
      storageClassName: {{ .Values.transcodeStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.transcodeStorageSize }}
  - metadata:
      name: plex-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.configStorageSize }}
  - metadata:
      name: sonarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: lidarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: radarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: bazarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: readarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: prowlarr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: overseerr-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  - metadata:
      name: qtorrent-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.configStorageClass }}
      storageClassName: {{ .Values.configStorageClass }}
      {{- end }}
      resources:
        requests:
          storage: 512Mi
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: plex-media
          persistentVolumeClaim:
            claimName: plex-media
        {{- range .Values.volumes }}
        {{ . | toYaml | nindent 8 }} 
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | indent 10 }}
{{ include "plex.env-vars" .env | indent 10 }}
          - name: PLEX_CLAIM
            value: "{{ .Values.claimToken }}"
          volumeMounts:
          - mountPath: "/data"
            name: plex-media
          - mountPath: "/transcode"
            name: plex-transcode
          - mountPath: "/config"
            name: plex-config
{{ include "plex.volume-mounts" .Values.volumeMounts | indent 10 }}
          ports:
            - name: plex
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /identity
              port: plex
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /identity
              port: plex
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources: 
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.sonarr.enabled }}
        - name: sonarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.sonarr.image.repository }}:{{ .Values.sonarr.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.sonarr.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | nindent 10 }}
{{ include "plex.env-vars" .Values.sonarr.env | indent 10 }}
          ports:
            - name: sonarr
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - mountPath: "/config"
              name: sonarr-config
            - mountPath: "/data"
              name: plex-media
{{ include "plex.volume-mounts" .Values.sonarr.volumeMounts | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.radarr.enabled }}
        - name: radarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.radarr.image.repository }}:{{ .Values.radarr.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.radarr.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | indent 10 }}
{{ include "plex.env-vars" .Values.radarr.env | indent 10 }}
          ports:
            - name: radarr
              containerPort: 7878
              protocol: TCP
          volumeMounts:
            - mountPath: "/config"
              name: radarr-config
            - mountPath: "/data"
              name: plex-media
{{ include "plex.volume-mounts" .Values.radarr.volumeMounts | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.qbittorrent.enabled }}
        - name: qbittorrent
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.qbittorrent.image.repository }}:{{ .Values.qbittorrent.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.qbittorrent.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | indent 10 }}
{{ include "plex.env-vars" .Values.qbittorrent.env | indent 10 }}
          - name: WEBUI_PORT
            value: "8080"
          ports:
            - name: qbittorrent
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: "/config"
              name: qtorrent-config
            - mountPath: "/data"
              name: plex-media
{{ include "plex.volume-mounts" .Values.qbittorrent.volumeMounts | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      {{- if .Values.prowlarr.enabled }}
        - name: prowlarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.prowlarr.image.repository }}:{{ .Values.prowlarr.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.prowlarr.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | indent 10 }}
{{ include "plex.env-vars" .Values.prowlarr.env | indent 10 }}
          {{- range .Values.prowlarr.env }}
          - name: 
          {{- end }}
          ports:
            - name: prowlarr
              containerPort: 9696
              protocol: TCP
          volumeMounts:
            - mountPath: "/config"
              name: prowlarr-config
{{ include "plex.volume-mounts" .Values.prowlarr.volumeMounts | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      {{- if .Values.overseerr.enabled }}
        - name: overseerr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.overseerr.image.repository }}:{{ .Values.overseerr.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.overseerr.image.pullPolicy }}
          env:
{{ include "plex.time-zone" . | indent 10 }}
{{ include "plex.env-vars" .Values.overseerr.env | indent 10 }}
          {{- range .Values.overseerr.env }}
          - name: 
          {{- end }}
          ports:
            - name: overseerr
              containerPort: {{ .Values.overseerr.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: "/config"
              name: overseerr-config
{{ include "plex.volume-mounts" .Values.prowlarr.volumeMounts | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
